from aiogram import Bot, Dispatcher, executor, types
import random
import sqlite3

bot = Bot('6679155946:AAHgWWKKfj-hFPuvFIZvm-g3-mCcHnH931c')
dp = Dispatcher(bot)

manicure = {'length': '', 'form': '', 'style': '', 'color': ''}
k=1

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    markup_start = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True,
                                             input_field_placeholder="–°–æ–∑–¥–∞–π —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å")
    bt1 = types.KeyboardButton('üíé–ù–∞—á–∞—Ç—å –∏–≥—Ä—ÉüéÆ')
    markup_start.add(bt1)
    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥–∏–∑–∞–π–Ω–æ–º –º–∞–Ω–∏–∫—é—Ä–∞',
        reply_markup=markup_start)

@dp.message_handler(commands=['info'])
async def info(message: types.Message):
    markup_info = types.InlineKeyboardMarkup(resize_keyboard=True)
    bt1=types.InlineKeyboardButton('–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–ºüí¨', url='https://t.me/vldwrr')
    markup_info.add(bt1)
    await message.answer('–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=markup_info)


@dp.message_handler(content_types=['text'])
async def game(message: types.Message):

    global k

    if message.text == 'üíé–ù–∞—á–∞—Ç—å –∏–≥—Ä—ÉüéÆ' or message.text == 'üéÆ–ù–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æüîÅ':
        markup_first_round = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        bt1 = types.KeyboardButton('üé≤–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–ª–∏–Ω—Éüìê')
        markup_first_round.add(bt1)
        await bot.send_photo(message.chat.id, photo=open('images/length.jpg', 'rb'),
                             caption=f"–†–∞—É–Ω–¥ 1Ô∏è‚É£ - –≤—ã–±–æ—Ä –¥–ª–∏–Ω—ã –Ω–æ–≥—Ç–µ–π!\n\nüü® <b>–∫–æ—Ä–æ—Ç–∫–∏–µ</b>\n\nüü® <b>—Å—Ä–µ–¥–Ω–∏–µ</b>\n\nüü® <b>–¥–ª–∏–Ω–Ω—ã–µ</b>",
                             reply_markup=markup_first_round, parse_mode='html')
        conn = sqlite3.connect('database.db')
        cur = conn.cursor()

        cur.execute(
            'CREATE TABLE IF NOT EXISTS users (id int auto_increment primary key, user_id varchar(50), length varchar(50),'
            ' form varchar(50), style varchar(50), color_type varchar(50), color varchar(50))')
        conn.commit()
        cur.close()
        conn.close()
        k+=1

    elif message.text == 'üé≤–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–ª–∏–Ω—Éüìê':
        manicure['length'] = ','.join(random.choices(['–¥–ª–∏–Ω–Ω—ã–µ', '—Å—Ä–µ–¥–Ω–∏–µ', '–∫–æ—Ä–æ—Ç–∫–∏–µ']))
        markup_second_round = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        bt1 = types.KeyboardButton('üé≤–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–æ—Ä–º—Éüî≤')
        markup_second_round.add(bt1)
        await message.answer(f"<i>üé∞–î–ª–∏–Ω–∞ –ø–æ–¥–æ–±—Ä–∞–Ω–∞‚úÖ</i>", parse_mode='html')
        await bot.send_photo(message.chat.id, photo=open('images/form.jpg', 'rb'),
                             caption="–†–∞—É–Ω–¥ 2Ô∏è‚É£ - –≤—ã–±–æ—Ä —Ñ–æ—Ä–º—ã –Ω–æ–≥—Ç–µ–π!\n\n<b>‚¨úÔ∏è –æ–≤–∞–ª\n\n‚¨úÔ∏è –∫–≤–∞–¥—Ä–∞—Ç\n\n‚¨úÔ∏è –º–∏–Ω–¥–∞–ª—å\n\n‚¨úÔ∏è —Å—Ç–∏–ª–µ—Ç</b>",
                             reply_markup=markup_second_round, parse_mode='html')

    elif message.text == 'üé≤–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–æ—Ä–º—Éüî≤':
        if manicure['length'] == '–∫–æ—Ä–æ—Ç–∫–∏–µ':
            manicure['form'] = ','.join(random.choices(['–∫–≤–∞–¥—Ä–∞—Ç', '–æ–≤–∞–ª']))
        else:
            manicure['form'] = ','.join(random.choices(['–∫–≤–∞–¥—Ä–∞—Ç', '–æ–≤–∞–ª', '–º–∏–Ω–¥–∞–ª—å', '—Å—Ç–∏–ª–µ—Ç']))
        markup_third_round = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        bt1 = types.KeyboardButton('üé≤–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏–∑–∞–π–Ωüë©‚Äçüé®')
        markup_third_round.add(bt1)
        await message.answer(f"<i>üé∞–§–æ—Ä–º–∞ –ø–æ–¥–æ–±—Ä–∞–Ω–∞‚úÖ</i>", parse_mode='html')
        await bot.send_photo(message.chat.id, photo=open('images/style.jpg', 'rb'),
                             caption="–†–∞—É–Ω–¥ 3Ô∏è‚É£ - –≤—ã–±–æ—Ä —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –Ω–æ–≥—Ç–µ–π!<b>\n\nüü™ —Å—Ç–µ–º–ø–∏–Ω–≥\n\nüü™ —Å–ª–∞–π–¥–µ—Ä—ã\n\nüü™ –ª–∏–Ω–∏–∏\n\nüü™ —Ñ—Ä–µ–Ω—á\n\nüü™ –±–ª–µ—Å—Ç–∫–∏\n\nüü™ –≥—Ä–∞–¥–∏–µ–Ω—Ç</b>",
                             reply_markup=markup_third_round, parse_mode='html')
        rand=random.randint(2,8)
        if k% rand==0:
            await bot.send_photo(message.chat.id, photo=open('images/add.jpg', 'rb'))

    elif message.text == 'üé≤–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏–∑–∞–π–Ωüë©‚Äçüé®':
        manicure['style'] = ','.join(random.choices(['—Å—Ç–µ–º–ø–∏–Ω–≥', '—Å–ª–∞–π–¥–µ—Ä—ã', '–ª–∏–Ω–∏–∏', '—Ñ—Ä–µ–Ω—á', '–±–ª–µ—Å—Ç–∫–∏', '–≥—Ä–∞–¥–∏–µ–Ω—Ç']))
        markup_fourth_round = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        bt1 = types.KeyboardButton('üé≤–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç‚òÄÔ∏è')
        markup_fourth_round.add(bt1)
        await message.answer(f"<i>üé∞–î–∏–∑–∞–π–Ω –ø–æ–¥–æ–±—Ä–∞–Ω‚úÖ</i>", parse_mode='html')
        await bot.send_photo(message.chat.id, photo=open('images/color.jpg', 'rb'),
                             caption="–†–∞—É–Ω–¥ 4Ô∏è‚É£ - –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ –Ω–æ–≥—Ç–µ–π!<b>\n\nüüß —è—Ä–∫–∏–π\n\nüüß –Ω—é–¥</b>",
                             reply_markup=markup_fourth_round, parse_mode='html')

    elif message.text == 'üé≤–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç‚òÄÔ∏è':
        manicure['color'] = ','.join(random.choices(['—è—Ä–∫–∏–π', '–Ω—é–¥']))
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        bt1 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∑–∞–π–Ω')
        markup.add(bt1)
        await message.answer(f"<i>üé∞–¶–≤–µ—Ç –ø–æ–¥–æ–±—Ä–∞–Ω‚úÖ</i>", parse_mode='html', reply_markup=markup)
        if manicure['color'] == '—è—Ä–∫–∏–π':
            color = "(" + ",".join(random.choices(
                ["–∫—Ä–∞—Å–Ω—ã–π", "–æ—Ä–∞–Ω–∂–µ–≤—ã–π", "–∂–µ–ª—Ç—ã–π", "–∑–µ–ª–µ–Ω—ã–π", "–≥–æ–ª—É–±–æ–π", "—Å–∏–Ω–∏–π", "—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π", "—Ä–æ–∑–æ–≤—ã–π", "–±–µ–ª—ã–π",
                 "—á–µ—Ä–Ω—ã–π", "—Å–µ—Ä—ã–π", "–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π", "–±–µ–∂–µ–≤—ã–π", "–º–∞–ª–∏–Ω–æ–≤—ã–π", "–≥—Ä—É—à–µ–≤—ã–π", "–æ–ª–∏–≤–∫–æ–≤—ã–π", "–ª–∏–º–æ–Ω–Ω—ã–π",
                 "–ø–µ—Ä—Å–∏–∫–æ–≤—ã–π", "—Å–∏—Ä–µ–Ω–µ–≤—ã–π", "–º—è—Ç–Ω—ã–π", "–º–∞–Ω–¥–∞—Ä–∏–Ω–æ–≤—ã–π", "–∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–π", "–∞–º–µ—Ç–∏—Å—Ç–æ–≤—ã–π", "–ª–∞–∑—É—Ä–Ω—ã–π",
                 "–∞–∫–≤–∞–º–∞—Ä–∏–Ω–æ–≤—ã–π", "–±–∞—Ä–¥–æ–≤—ã–π", "–∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π", "—Å–µ—Ä–µ–±—Ä—è–Ω—ã–π", "–∏–Ω–¥–∏–≥–æ", "—Ü–∏–∞–Ω", "—Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤—ã–π",
                 "–∫–æ—Ä–∞–ª–ª–æ–≤—ã–π", "—Ö–∞–∫–∏", "–≤–∏—à–Ω–µ–≤—ã–π", "–æ—Ä—Ö–∏–¥–µ—è"])) + ")"
        else:
            color = "(" + ",".join(random.choices(
                ["–ø–∞—Å—Ç–µ–ª—å–Ω–æ-—Ä–æ–∑–æ–≤—ã–π", "–Ω–µ–∂–Ω–æ-–±–µ–∂–µ–≤—ã–π", "–º–æ–ª–æ—á–Ω—ã–π", "–º—è–≥–∫–∏–π –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–π", "–Ω–µ–±–µ—Å–Ω–æ-–≥–æ–ª—É–±–æ–π",
                 "–Ω–µ–∂–Ω–æ-–∑–µ–ª–µ–Ω—ã–π", "—Å–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π", "—Å–∏—Ä–µ–Ω–µ–≤—ã–π", "–∫—Ä–µ–º–æ–≤—ã–π"])) + ")"

        conn = sqlite3.connect('database.db')
        cur = conn.cursor()
        cur.execute(f"INSERT INTO users (user_id, length, form, style, color_type, color) "
        f"VALUES ('%s', '%s', '%s', '%s', '%s', '%s')"
                   % (message.from_user.id, manicure['length'], manicure['form'], manicure['style'], manicure['color'], color))
        conn.commit()
        cur.close()
        conn.close()

    elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∑–∞–π–Ω':
            markup_restart = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True,
                                                       input_field_placeholder="–°–æ–∑–¥–∞–π —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å")
            bt1 = types.KeyboardButton('üéÆ–ù–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æüîÅ')
            markup_restart.add(bt1)
            conn = sqlite3.connect('database.db')
            cur = conn.cursor()

            cur.execute('SELECT * from users WHERE user_id = ?', (message.from_user.id,))
            users = cur.fetchall()
            for elem in users:
                    await message.answer(
                    f"<b>‚≠êÔ∏è–ü–æ–ª—É—á–∏–≤—à–∏–π—Å—è –¥–∏–∑–∞–π–Ω:üçÄ</b>\n\n‚ñ´Ô∏è –¥–ª–∏–Ω–∞ - <b>{elem[2]}</b>\n‚ñ´Ô∏è —Ñ–æ—Ä–º–∞ - <b>{elem[3]}</b>\n‚ñ´Ô∏è –¥–∏–∑–∞–π–Ω - <b>{elem[4]}</b>\n‚ñ´Ô∏è —Ü–≤–µ—Ç - <b>{elem[5]}{elem[6]}</b>",
                    reply_markup=markup_restart, parse_mode='html')
            cur.execute('DELETE from users WHERE user_id = ?', (message.from_user.id,))
            conn.commit()
            cur.close()
            conn.close()
executor.start_polling(dp)
